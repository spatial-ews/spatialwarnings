% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clustering.R
\name{raw_clustering}
\alias{raw_clustering}
\title{Clustering of pairs}
\usage{
raw_clustering(mat, wrap = TRUE, use_8_nb = FALSE, divide_by_null = TRUE)
}
\arguments{
\item{mat}{A matrix, usually with discrete values (logical, integers, etc.)}

\item{wrap}{Whether space should be considered to wrap at the edges}

\item{use_8_nb}{Set to TRUE to use an 8-way neighborhood. The default is set to FALSE, 
which uses a 4-way neighborhood}

\item{divide_by_null}{By default, this function computes the expected number of pairs, 
and divides it by the observed number of pairs}
}
\value{
A vector with the requested clutering values, whose names are equal to 
    each state (unique value) found in the original matrix, preceded by 'clust_' 
    (to make sure names are compatible with other functions).
}
\description{
Compute clustering of pairs in a landscape
}
\details{
The clustering of pairs is defined as the density of pairs, i.e. 
    the proportion of all pairs of cells that share the same state, divided by the 
    null expectation given a random, homogeneous spatial structure. 
  
  For example, let's consider a matrix with two states, 'a' and 'b'. This function 
    will count all pairs of cells 'a-a' or 'b-b', and divide this by the total
    number of pairs. This proportion is then again divided by the probability of
    obtaining these proportion of pairs under the assumption of no spatial structure
    (random mixing of states in the matrix). 
   
  Clustering is equal to one when there is no spatial structure. It is above one when 
    two states tend to be next to each other (i.e. cluster) more than expected by 
    chance. Values below one means that those two states tend to be neighbors less 
    than expected by chance. 
  
  If you are only interested in the proportion of pairs of a given state, and you 
    do not want to divide by the null expectation, set divide_by_null = FALSE. This 
    may happen if you have a more complicated null model than a random, homogeneous
    landscape.
}
\examples{

# The clustering of a random matrix is close to one
ls <- 100 # lattice size
mm <- matrix(sample(c("sp1", "sp2", "sp3", "sp4"), size = ls^2, replace = TRUE), 
             nrow = ls, ncol = ls)
clust <- raw_clustering(mm, wrap = TRUE, use_8_nb = TRUE) 
print(clust)

# Compute clustering along the gradient for the serengeti dataset 
data(forestgap)
clust_indic <- compute_indicator(serengeti, raw_clustering, 
                                 wrap = TRUE, use_8_nb = FALSE)
# The interesting one is the clustering of state 1 (TRUE in the original matrix), 
# which shows similar trends to the variance (as a generic indicator, see 
# ?generic_sews)
plot(clust_indic, along = serengeti.rain) 
# Add null trend
clust_test <- indictest(clust_indic, nrep = 19)
plot(clust_test)

}
